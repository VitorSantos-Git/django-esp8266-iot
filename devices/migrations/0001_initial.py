# Generated by Django 5.2.4 on 2025-07-23 02:21

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DayOfWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, unique=True)),
                ('numeric_value', models.IntegerField(choices=[(0, 'Domingo'), (1, 'Segunda-feira'), (2, 'Terça-feira'), (3, 'Quarta-feira'), (4, 'Quinta-feira'), (5, 'Sexta-feira'), (6, 'Sábado')], unique=True)),
            ],
            options={
                'verbose_name': 'Dia da Semana',
                'verbose_name_plural': 'Dias da Semana',
                'ordering': ['numeric_value'],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(help_text='ID único do dispositivo ESP8266 (ex: ESP8266_B001)', max_length=100, unique=True)),
                ('name', models.CharField(help_text='Nome descritivo para o dispositivo (ex: Sensor Sala)', max_length=100, verbose_name='Nome Amigável')),
                ('device_type', models.CharField(blank=True, help_text='Categoria do dispositivo (ex: Temperatura, Relé, IR)', max_length=50, null=True, verbose_name='Tipo de Dispositivo')),
                ('location', models.CharField(blank=True, help_text='Onde o dispositivo está localizado (ex: Sala, Quarto)', max_length=100, null=True, verbose_name='Localização')),
                ('last_seen', models.DateTimeField(auto_now=True, help_text='Data e hora da última comunicação do dispositivo', verbose_name='Última Conexão')),
                ('is_online', models.BooleanField(default=False, help_text='Indica se o dispositivo está online', verbose_name='Online')),
                ('data', models.JSONField(blank=True, help_text='Dados genéricos recebidos do dispositivo (temperatura, umidade, etc.)', null=True, verbose_name='Dados Recebidos')),
                ('last_command', models.CharField(blank=True, help_text='O último comando que o dispositivo executou.', max_length=255, null=True, verbose_name='Último Comando Executado')),
                ('last_command_at', models.DateTimeField(blank=True, help_text='Data e hora em que o último comando foi executado pelo dispositivo.', null=True, verbose_name='Executado Em')),
                ('pending_command', models.JSONField(blank=True, help_text="Comando a ser enviado para o dispositivo (JSON: {'action': 'ligar', 'target': 'rele'})", null=True, verbose_name='Comando Pendente')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data e hora de criação do registro do dispositivo', verbose_name='Criado Em')),
            ],
            options={
                'verbose_name': 'Dispositivo',
                'verbose_name_plural': 'Dispositivos',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ScheduledCommand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Nome descritivo para o agendamento (ex: Ligar Luz da Sala)', max_length=255)),
                ('command_json', models.JSONField(help_text='Comando a ser enviado no formato JSON (ex: {"action": "ligar_rele", "target": "rele_D1", "value": 1})')),
                ('schedule_type', models.CharField(choices=[('daily', 'Diário'), ('weekly', 'Semanal'), ('once', 'Uma Vez')], default='weekly', help_text='Tipo de agendamento: Diário (todos os dias), Semanal (dias específicos), Uma Vez (data e hora únicas).', max_length=50)),
                ('time_of_day', models.TimeField(blank=True, help_text='Hora (HH:MM:SS) para o comando ser enviado.', null=True)),
                ('run_once_at', models.DateTimeField(blank=True, help_text='Data e hora para executar o comando apenas uma vez.', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Marque para ativar o agendamento.')),
                ('last_triggered_at', models.DateTimeField(blank=True, help_text='Data e hora da última vez que este agendamento foi acionado.', null=True)),
                ('day_of_week', models.ManyToManyField(blank=True, help_text='Selecione os dias da semana para agendamentos semanais.', to='devices.dayofweek')),
                ('devices', models.ManyToManyField(help_text='Selecione os dispositivos que receberão este comando.', related_name='scheduled_commands', to='devices.device')),
            ],
            options={
                'verbose_name': 'Comando Agendado',
                'verbose_name_plural': 'Comandos Agendados',
                'ordering': ['name'],
            },
        ),
    ]
