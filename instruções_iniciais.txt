Executando o Projeto

    Bash

    python manage.py shell

Você precisará de três terminais separados, todos com o ambiente virtual ativado.

Iniciar o Servidor Django
No primeiro terminal:

    Bash

    python manage.py runserver 0.0.0.0:8000

Acesse o painel de administração em
http://127.0.0.1:8000/admin/ (ou http://xxx.xxx.xxx.xxx:8000/admin/ se estiver usando o IP da sua máquina na rede).


Iniciar o Celery Worker
No segundo terminal:

    Bash

    celery -A iot_monitor_project worker -l info --pool=solo
    
Nota: O --pool=solo é crucial para ambientes Windows para evitar PermissionError. Em ambientes Linux/produção, você pode omitir ou usar prefork.

Iniciar o Celery Beat
No terceiro terminal:

    Bash

    celery -A iot_monitor_project beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler


Certifique-se de que o servidor Redis esteja rodando no WSL antes de iniciar o Celery Worker e Beat.


Resumo dos Comandos github:

Bash

git status
git add .
git commit -m "feat(fix ou doc): xxxxxxxxx"
git push origin main

feat: é um prefixo comum para indicar que é uma nova funcionalidade (feature). 
fix: para correção de bugs.
docs: para documentação, etc.

"""